// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TopsAstProto.proto

#ifndef PROTOBUF_INCLUDED_TopsAstProto_2eproto
#define PROTOBUF_INCLUDED_TopsAstProto_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_TopsAstProto_2eproto 

namespace protobuf_TopsAstProto_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_TopsAstProto_2eproto
namespace TopsAstProto {
class DeclRef;
class DeclRefDefaultTypeInternal;
extern DeclRefDefaultTypeInternal _DeclRef_default_instance_;
class FileInfo;
class FileInfoDefaultTypeInternal;
extern FileInfoDefaultTypeInternal _FileInfo_default_instance_;
class Function;
class FunctionDefaultTypeInternal;
extern FunctionDefaultTypeInternal _Function_default_instance_;
class Location;
class LocationDefaultTypeInternal;
extern LocationDefaultTypeInternal _Location_default_instance_;
class StringIndex;
class StringIndexDefaultTypeInternal;
extern StringIndexDefaultTypeInternal _StringIndex_default_instance_;
class StringTable;
class StringTableDefaultTypeInternal;
extern StringTableDefaultTypeInternal _StringTable_default_instance_;
class TranslationUnit;
class TranslationUnitDefaultTypeInternal;
extern TranslationUnitDefaultTypeInternal _TranslationUnit_default_instance_;
class Variable;
class VariableDefaultTypeInternal;
extern VariableDefaultTypeInternal _Variable_default_instance_;
}  // namespace TopsAstProto
namespace google {
namespace protobuf {
template<> ::TopsAstProto::DeclRef* Arena::CreateMaybeMessage<::TopsAstProto::DeclRef>(Arena*);
template<> ::TopsAstProto::FileInfo* Arena::CreateMaybeMessage<::TopsAstProto::FileInfo>(Arena*);
template<> ::TopsAstProto::Function* Arena::CreateMaybeMessage<::TopsAstProto::Function>(Arena*);
template<> ::TopsAstProto::Location* Arena::CreateMaybeMessage<::TopsAstProto::Location>(Arena*);
template<> ::TopsAstProto::StringIndex* Arena::CreateMaybeMessage<::TopsAstProto::StringIndex>(Arena*);
template<> ::TopsAstProto::StringTable* Arena::CreateMaybeMessage<::TopsAstProto::StringTable>(Arena*);
template<> ::TopsAstProto::TranslationUnit* Arena::CreateMaybeMessage<::TopsAstProto::TranslationUnit>(Arena*);
template<> ::TopsAstProto::Variable* Arena::CreateMaybeMessage<::TopsAstProto::Variable>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace TopsAstProto {

// ===================================================================

class StringTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.StringTable) */ {
 public:
  StringTable();
  virtual ~StringTable();

  StringTable(const StringTable& from);

  inline StringTable& operator=(const StringTable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringTable(StringTable&& from) noexcept
    : StringTable() {
    *this = ::std::move(from);
  }

  inline StringTable& operator=(StringTable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringTable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringTable* internal_default_instance() {
    return reinterpret_cast<const StringTable*>(
               &_StringTable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(StringTable* other);
  friend void swap(StringTable& a, StringTable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringTable* New() const final {
    return CreateMaybeMessage<StringTable>(NULL);
  }

  StringTable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringTable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringTable& from);
  void MergeFrom(const StringTable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string entries = 1;
  int entries_size() const;
  void clear_entries();
  static const int kEntriesFieldNumber = 1;
  const ::std::string& entries(int index) const;
  ::std::string* mutable_entries(int index);
  void set_entries(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_entries(int index, ::std::string&& value);
  #endif
  void set_entries(int index, const char* value);
  void set_entries(int index, const char* value, size_t size);
  ::std::string* add_entries();
  void add_entries(const ::std::string& value);
  #if LANG_CXX11
  void add_entries(::std::string&& value);
  #endif
  void add_entries(const char* value);
  void add_entries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& entries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_entries();

  // @@protoc_insertion_point(class_scope:TopsAstProto.StringTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> entries_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringIndex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.StringIndex) */ {
 public:
  StringIndex();
  virtual ~StringIndex();

  StringIndex(const StringIndex& from);

  inline StringIndex& operator=(const StringIndex& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringIndex(StringIndex&& from) noexcept
    : StringIndex() {
    *this = ::std::move(from);
  }

  inline StringIndex& operator=(StringIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringIndex* internal_default_instance() {
    return reinterpret_cast<const StringIndex*>(
               &_StringIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StringIndex* other);
  friend void swap(StringIndex& a, StringIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringIndex* New() const final {
    return CreateMaybeMessage<StringIndex>(NULL);
  }

  StringIndex* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<StringIndex>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const StringIndex& from);
  void MergeFrom(const StringIndex& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 index = 1;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TopsAstProto.StringIndex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 index_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Location : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.Location) */ {
 public:
  Location();
  virtual ~Location();

  Location(const Location& from);

  inline Location& operator=(const Location& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Location(Location&& from) noexcept
    : Location() {
    *this = ::std::move(from);
  }

  inline Location& operator=(Location&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Location& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Location* internal_default_instance() {
    return reinterpret_cast<const Location*>(
               &_Location_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Location* other);
  friend void swap(Location& a, Location& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Location* New() const final {
    return CreateMaybeMessage<Location>(NULL);
  }

  Location* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Location>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Location& from);
  void MergeFrom(const Location& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Location* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TopsAstProto.StringIndex file_name = 1;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  private:
  const ::TopsAstProto::StringIndex& _internal_file_name() const;
  public:
  const ::TopsAstProto::StringIndex& file_name() const;
  ::TopsAstProto::StringIndex* release_file_name();
  ::TopsAstProto::StringIndex* mutable_file_name();
  void set_allocated_file_name(::TopsAstProto::StringIndex* file_name);

  // uint32 line = 2;
  void clear_line();
  static const int kLineFieldNumber = 2;
  ::google::protobuf::uint32 line() const;
  void set_line(::google::protobuf::uint32 value);

  // uint32 column = 3;
  void clear_column();
  static const int kColumnFieldNumber = 3;
  ::google::protobuf::uint32 column() const;
  void set_column(::google::protobuf::uint32 value);

  // uint32 length = 4;
  void clear_length();
  static const int kLengthFieldNumber = 4;
  ::google::protobuf::uint32 length() const;
  void set_length(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:TopsAstProto.Location)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TopsAstProto::StringIndex* file_name_;
  ::google::protobuf::uint32 line_;
  ::google::protobuf::uint32 column_;
  ::google::protobuf::uint32 length_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.FileInfo) */ {
 public:
  FileInfo();
  virtual ~FileInfo();

  FileInfo(const FileInfo& from);

  inline FileInfo& operator=(const FileInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FileInfo(FileInfo&& from) noexcept
    : FileInfo() {
    *this = ::std::move(from);
  }

  inline FileInfo& operator=(FileInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FileInfo* internal_default_instance() {
    return reinterpret_cast<const FileInfo*>(
               &_FileInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(FileInfo* other);
  friend void swap(FileInfo& a, FileInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FileInfo* New() const final {
    return CreateMaybeMessage<FileInfo>(NULL);
  }

  FileInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<FileInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const FileInfo& from);
  void MergeFrom(const FileInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TopsAstProto.StringIndex file_name = 1;
  bool has_file_name() const;
  void clear_file_name();
  static const int kFileNameFieldNumber = 1;
  private:
  const ::TopsAstProto::StringIndex& _internal_file_name() const;
  public:
  const ::TopsAstProto::StringIndex& file_name() const;
  ::TopsAstProto::StringIndex* release_file_name();
  ::TopsAstProto::StringIndex* mutable_file_name();
  void set_allocated_file_name(::TopsAstProto::StringIndex* file_name);

  // @@protoc_insertion_point(class_scope:TopsAstProto.FileInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TopsAstProto::StringIndex* file_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Function : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.Function) */ {
 public:
  Function();
  virtual ~Function();

  Function(const Function& from);

  inline Function& operator=(const Function& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Function(Function&& from) noexcept
    : Function() {
    *this = ::std::move(from);
  }

  inline Function& operator=(Function&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Function& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Function* internal_default_instance() {
    return reinterpret_cast<const Function*>(
               &_Function_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Function* other);
  friend void swap(Function& a, Function& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Function* New() const final {
    return CreateMaybeMessage<Function>(NULL);
  }

  Function* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Function>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Function& from);
  void MergeFrom(const Function& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Function* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TopsAstProto.Variable parameters = 4;
  int parameters_size() const;
  void clear_parameters();
  static const int kParametersFieldNumber = 4;
  ::TopsAstProto::Variable* mutable_parameters(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >*
      mutable_parameters();
  const ::TopsAstProto::Variable& parameters(int index) const;
  ::TopsAstProto::Variable* add_parameters();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >&
      parameters() const;

  // repeated .TopsAstProto.Variable local_vars = 5;
  int local_vars_size() const;
  void clear_local_vars();
  static const int kLocalVarsFieldNumber = 5;
  ::TopsAstProto::Variable* mutable_local_vars(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >*
      mutable_local_vars();
  const ::TopsAstProto::Variable& local_vars(int index) const;
  ::TopsAstProto::Variable* add_local_vars();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >&
      local_vars() const;

  // .TopsAstProto.StringIndex name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  private:
  const ::TopsAstProto::StringIndex& _internal_name() const;
  public:
  const ::TopsAstProto::StringIndex& name() const;
  ::TopsAstProto::StringIndex* release_name();
  ::TopsAstProto::StringIndex* mutable_name();
  void set_allocated_name(::TopsAstProto::StringIndex* name);

  // .TopsAstProto.StringIndex return_type = 2;
  bool has_return_type() const;
  void clear_return_type();
  static const int kReturnTypeFieldNumber = 2;
  private:
  const ::TopsAstProto::StringIndex& _internal_return_type() const;
  public:
  const ::TopsAstProto::StringIndex& return_type() const;
  ::TopsAstProto::StringIndex* release_return_type();
  ::TopsAstProto::StringIndex* mutable_return_type();
  void set_allocated_return_type(::TopsAstProto::StringIndex* return_type);

  // .TopsAstProto.Location location = 3;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 3;
  private:
  const ::TopsAstProto::Location& _internal_location() const;
  public:
  const ::TopsAstProto::Location& location() const;
  ::TopsAstProto::Location* release_location();
  ::TopsAstProto::Location* mutable_location();
  void set_allocated_location(::TopsAstProto::Location* location);

  // @@protoc_insertion_point(class_scope:TopsAstProto.Function)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable > parameters_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable > local_vars_;
  ::TopsAstProto::StringIndex* name_;
  ::TopsAstProto::StringIndex* return_type_;
  ::TopsAstProto::Location* location_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Variable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.Variable) */ {
 public:
  Variable();
  virtual ~Variable();

  Variable(const Variable& from);

  inline Variable& operator=(const Variable& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Variable(Variable&& from) noexcept
    : Variable() {
    *this = ::std::move(from);
  }

  inline Variable& operator=(Variable&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Variable& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Variable* internal_default_instance() {
    return reinterpret_cast<const Variable*>(
               &_Variable_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(Variable* other);
  friend void swap(Variable& a, Variable& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Variable* New() const final {
    return CreateMaybeMessage<Variable>(NULL);
  }

  Variable* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Variable>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Variable& from);
  void MergeFrom(const Variable& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Variable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TopsAstProto.StringIndex name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  private:
  const ::TopsAstProto::StringIndex& _internal_name() const;
  public:
  const ::TopsAstProto::StringIndex& name() const;
  ::TopsAstProto::StringIndex* release_name();
  ::TopsAstProto::StringIndex* mutable_name();
  void set_allocated_name(::TopsAstProto::StringIndex* name);

  // .TopsAstProto.StringIndex type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  private:
  const ::TopsAstProto::StringIndex& _internal_type() const;
  public:
  const ::TopsAstProto::StringIndex& type() const;
  ::TopsAstProto::StringIndex* release_type();
  ::TopsAstProto::StringIndex* mutable_type();
  void set_allocated_type(::TopsAstProto::StringIndex* type);

  // .TopsAstProto.Location location = 3;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 3;
  private:
  const ::TopsAstProto::Location& _internal_location() const;
  public:
  const ::TopsAstProto::Location& location() const;
  ::TopsAstProto::Location* release_location();
  ::TopsAstProto::Location* mutable_location();
  void set_allocated_location(::TopsAstProto::Location* location);

  // @@protoc_insertion_point(class_scope:TopsAstProto.Variable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TopsAstProto::StringIndex* name_;
  ::TopsAstProto::StringIndex* type_;
  ::TopsAstProto::Location* location_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeclRef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.DeclRef) */ {
 public:
  DeclRef();
  virtual ~DeclRef();

  DeclRef(const DeclRef& from);

  inline DeclRef& operator=(const DeclRef& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DeclRef(DeclRef&& from) noexcept
    : DeclRef() {
    *this = ::std::move(from);
  }

  inline DeclRef& operator=(DeclRef&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeclRef& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeclRef* internal_default_instance() {
    return reinterpret_cast<const DeclRef*>(
               &_DeclRef_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(DeclRef* other);
  friend void swap(DeclRef& a, DeclRef& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DeclRef* New() const final {
    return CreateMaybeMessage<DeclRef>(NULL);
  }

  DeclRef* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DeclRef>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DeclRef& from);
  void MergeFrom(const DeclRef& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeclRef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TopsAstProto.StringIndex referenced_name = 1;
  bool has_referenced_name() const;
  void clear_referenced_name();
  static const int kReferencedNameFieldNumber = 1;
  private:
  const ::TopsAstProto::StringIndex& _internal_referenced_name() const;
  public:
  const ::TopsAstProto::StringIndex& referenced_name() const;
  ::TopsAstProto::StringIndex* release_referenced_name();
  ::TopsAstProto::StringIndex* mutable_referenced_name();
  void set_allocated_referenced_name(::TopsAstProto::StringIndex* referenced_name);

  // .TopsAstProto.StringIndex referenced_type = 2;
  bool has_referenced_type() const;
  void clear_referenced_type();
  static const int kReferencedTypeFieldNumber = 2;
  private:
  const ::TopsAstProto::StringIndex& _internal_referenced_type() const;
  public:
  const ::TopsAstProto::StringIndex& referenced_type() const;
  ::TopsAstProto::StringIndex* release_referenced_type();
  ::TopsAstProto::StringIndex* mutable_referenced_type();
  void set_allocated_referenced_type(::TopsAstProto::StringIndex* referenced_type);

  // .TopsAstProto.Location location = 3;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 3;
  private:
  const ::TopsAstProto::Location& _internal_location() const;
  public:
  const ::TopsAstProto::Location& location() const;
  ::TopsAstProto::Location* release_location();
  ::TopsAstProto::Location* mutable_location();
  void set_allocated_location(::TopsAstProto::Location* location);

  // @@protoc_insertion_point(class_scope:TopsAstProto.DeclRef)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TopsAstProto::StringIndex* referenced_name_;
  ::TopsAstProto::StringIndex* referenced_type_;
  ::TopsAstProto::Location* location_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TranslationUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TopsAstProto.TranslationUnit) */ {
 public:
  TranslationUnit();
  virtual ~TranslationUnit();

  TranslationUnit(const TranslationUnit& from);

  inline TranslationUnit& operator=(const TranslationUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TranslationUnit(TranslationUnit&& from) noexcept
    : TranslationUnit() {
    *this = ::std::move(from);
  }

  inline TranslationUnit& operator=(TranslationUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TranslationUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TranslationUnit* internal_default_instance() {
    return reinterpret_cast<const TranslationUnit*>(
               &_TranslationUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(TranslationUnit* other);
  friend void swap(TranslationUnit& a, TranslationUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TranslationUnit* New() const final {
    return CreateMaybeMessage<TranslationUnit>(NULL);
  }

  TranslationUnit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TranslationUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TranslationUnit& from);
  void MergeFrom(const TranslationUnit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TranslationUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TopsAstProto.FileInfo included_headers = 4;
  int included_headers_size() const;
  void clear_included_headers();
  static const int kIncludedHeadersFieldNumber = 4;
  ::TopsAstProto::FileInfo* mutable_included_headers(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::FileInfo >*
      mutable_included_headers();
  const ::TopsAstProto::FileInfo& included_headers(int index) const;
  ::TopsAstProto::FileInfo* add_included_headers();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::FileInfo >&
      included_headers() const;

  // repeated .TopsAstProto.Function func_decls = 5;
  int func_decls_size() const;
  void clear_func_decls();
  static const int kFuncDeclsFieldNumber = 5;
  ::TopsAstProto::Function* mutable_func_decls(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >*
      mutable_func_decls();
  const ::TopsAstProto::Function& func_decls(int index) const;
  ::TopsAstProto::Function* add_func_decls();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >&
      func_decls() const;

  // repeated .TopsAstProto.Function func_defs = 6;
  int func_defs_size() const;
  void clear_func_defs();
  static const int kFuncDefsFieldNumber = 6;
  ::TopsAstProto::Function* mutable_func_defs(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >*
      mutable_func_defs();
  const ::TopsAstProto::Function& func_defs(int index) const;
  ::TopsAstProto::Function* add_func_defs();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >&
      func_defs() const;

  // repeated .TopsAstProto.Variable global_vars = 7;
  int global_vars_size() const;
  void clear_global_vars();
  static const int kGlobalVarsFieldNumber = 7;
  ::TopsAstProto::Variable* mutable_global_vars(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >*
      mutable_global_vars();
  const ::TopsAstProto::Variable& global_vars(int index) const;
  ::TopsAstProto::Variable* add_global_vars();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >&
      global_vars() const;

  // repeated .TopsAstProto.DeclRef decl_refs = 8;
  int decl_refs_size() const;
  void clear_decl_refs();
  static const int kDeclRefsFieldNumber = 8;
  ::TopsAstProto::DeclRef* mutable_decl_refs(int index);
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::DeclRef >*
      mutable_decl_refs();
  const ::TopsAstProto::DeclRef& decl_refs(int index) const;
  ::TopsAstProto::DeclRef* add_decl_refs();
  const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::DeclRef >&
      decl_refs() const;

  // string compile_args = 3;
  void clear_compile_args();
  static const int kCompileArgsFieldNumber = 3;
  const ::std::string& compile_args() const;
  void set_compile_args(const ::std::string& value);
  #if LANG_CXX11
  void set_compile_args(::std::string&& value);
  #endif
  void set_compile_args(const char* value);
  void set_compile_args(const char* value, size_t size);
  ::std::string* mutable_compile_args();
  ::std::string* release_compile_args();
  void set_allocated_compile_args(::std::string* compile_args);

  // .TopsAstProto.StringTable string_table = 1;
  bool has_string_table() const;
  void clear_string_table();
  static const int kStringTableFieldNumber = 1;
  private:
  const ::TopsAstProto::StringTable& _internal_string_table() const;
  public:
  const ::TopsAstProto::StringTable& string_table() const;
  ::TopsAstProto::StringTable* release_string_table();
  ::TopsAstProto::StringTable* mutable_string_table();
  void set_allocated_string_table(::TopsAstProto::StringTable* string_table);

  // .TopsAstProto.StringIndex file_path = 2;
  bool has_file_path() const;
  void clear_file_path();
  static const int kFilePathFieldNumber = 2;
  private:
  const ::TopsAstProto::StringIndex& _internal_file_path() const;
  public:
  const ::TopsAstProto::StringIndex& file_path() const;
  ::TopsAstProto::StringIndex* release_file_path();
  ::TopsAstProto::StringIndex* mutable_file_path();
  void set_allocated_file_path(::TopsAstProto::StringIndex* file_path);

  // @@protoc_insertion_point(class_scope:TopsAstProto.TranslationUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::FileInfo > included_headers_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function > func_decls_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function > func_defs_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable > global_vars_;
  ::google::protobuf::RepeatedPtrField< ::TopsAstProto::DeclRef > decl_refs_;
  ::google::protobuf::internal::ArenaStringPtr compile_args_;
  ::TopsAstProto::StringTable* string_table_;
  ::TopsAstProto::StringIndex* file_path_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_TopsAstProto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// StringTable

// repeated string entries = 1;
inline int StringTable::entries_size() const {
  return entries_.size();
}
inline void StringTable::clear_entries() {
  entries_.Clear();
}
inline const ::std::string& StringTable::entries(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.StringTable.entries)
  return entries_.Get(index);
}
inline ::std::string* StringTable::mutable_entries(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.StringTable.entries)
  return entries_.Mutable(index);
}
inline void StringTable::set_entries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TopsAstProto.StringTable.entries)
  entries_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringTable::set_entries(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:TopsAstProto.StringTable.entries)
  entries_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringTable::set_entries(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TopsAstProto.StringTable.entries)
}
inline void StringTable::set_entries(int index, const char* value, size_t size) {
  entries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TopsAstProto.StringTable.entries)
}
inline ::std::string* StringTable::add_entries() {
  // @@protoc_insertion_point(field_add_mutable:TopsAstProto.StringTable.entries)
  return entries_.Add();
}
inline void StringTable::add_entries(const ::std::string& value) {
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TopsAstProto.StringTable.entries)
}
#if LANG_CXX11
inline void StringTable::add_entries(::std::string&& value) {
  entries_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TopsAstProto.StringTable.entries)
}
#endif
inline void StringTable::add_entries(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  entries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TopsAstProto.StringTable.entries)
}
inline void StringTable::add_entries(const char* value, size_t size) {
  entries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TopsAstProto.StringTable.entries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringTable::entries() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.StringTable.entries)
  return entries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringTable::mutable_entries() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.StringTable.entries)
  return &entries_;
}

// -------------------------------------------------------------------

// StringIndex

// uint32 index = 1;
inline void StringIndex::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 StringIndex::index() const {
  // @@protoc_insertion_point(field_get:TopsAstProto.StringIndex.index)
  return index_;
}
inline void StringIndex::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:TopsAstProto.StringIndex.index)
}

// -------------------------------------------------------------------

// Location

// .TopsAstProto.StringIndex file_name = 1;
inline bool Location::has_file_name() const {
  return this != internal_default_instance() && file_name_ != NULL;
}
inline void Location::clear_file_name() {
  if (GetArenaNoVirtual() == NULL && file_name_ != NULL) {
    delete file_name_;
  }
  file_name_ = NULL;
}
inline const ::TopsAstProto::StringIndex& Location::_internal_file_name() const {
  return *file_name_;
}
inline const ::TopsAstProto::StringIndex& Location::file_name() const {
  const ::TopsAstProto::StringIndex* p = file_name_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Location.file_name)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* Location::release_file_name() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Location.file_name)
  
  ::TopsAstProto::StringIndex* temp = file_name_;
  file_name_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* Location::mutable_file_name() {
  
  if (file_name_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    file_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Location.file_name)
  return file_name_;
}
inline void Location::set_allocated_file_name(::TopsAstProto::StringIndex* file_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete file_name_;
  }
  if (file_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      file_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file_name, submessage_arena);
    }
    
  } else {
    
  }
  file_name_ = file_name;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Location.file_name)
}

// uint32 line = 2;
inline void Location::clear_line() {
  line_ = 0u;
}
inline ::google::protobuf::uint32 Location::line() const {
  // @@protoc_insertion_point(field_get:TopsAstProto.Location.line)
  return line_;
}
inline void Location::set_line(::google::protobuf::uint32 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:TopsAstProto.Location.line)
}

// uint32 column = 3;
inline void Location::clear_column() {
  column_ = 0u;
}
inline ::google::protobuf::uint32 Location::column() const {
  // @@protoc_insertion_point(field_get:TopsAstProto.Location.column)
  return column_;
}
inline void Location::set_column(::google::protobuf::uint32 value) {
  
  column_ = value;
  // @@protoc_insertion_point(field_set:TopsAstProto.Location.column)
}

// uint32 length = 4;
inline void Location::clear_length() {
  length_ = 0u;
}
inline ::google::protobuf::uint32 Location::length() const {
  // @@protoc_insertion_point(field_get:TopsAstProto.Location.length)
  return length_;
}
inline void Location::set_length(::google::protobuf::uint32 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:TopsAstProto.Location.length)
}

// -------------------------------------------------------------------

// FileInfo

// .TopsAstProto.StringIndex file_name = 1;
inline bool FileInfo::has_file_name() const {
  return this != internal_default_instance() && file_name_ != NULL;
}
inline void FileInfo::clear_file_name() {
  if (GetArenaNoVirtual() == NULL && file_name_ != NULL) {
    delete file_name_;
  }
  file_name_ = NULL;
}
inline const ::TopsAstProto::StringIndex& FileInfo::_internal_file_name() const {
  return *file_name_;
}
inline const ::TopsAstProto::StringIndex& FileInfo::file_name() const {
  const ::TopsAstProto::StringIndex* p = file_name_;
  // @@protoc_insertion_point(field_get:TopsAstProto.FileInfo.file_name)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* FileInfo::release_file_name() {
  // @@protoc_insertion_point(field_release:TopsAstProto.FileInfo.file_name)
  
  ::TopsAstProto::StringIndex* temp = file_name_;
  file_name_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* FileInfo::mutable_file_name() {
  
  if (file_name_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    file_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.FileInfo.file_name)
  return file_name_;
}
inline void FileInfo::set_allocated_file_name(::TopsAstProto::StringIndex* file_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete file_name_;
  }
  if (file_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      file_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file_name, submessage_arena);
    }
    
  } else {
    
  }
  file_name_ = file_name;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.FileInfo.file_name)
}

// -------------------------------------------------------------------

// Function

// .TopsAstProto.StringIndex name = 1;
inline bool Function::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Function::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
inline const ::TopsAstProto::StringIndex& Function::_internal_name() const {
  return *name_;
}
inline const ::TopsAstProto::StringIndex& Function::name() const {
  const ::TopsAstProto::StringIndex* p = name_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Function.name)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* Function::release_name() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Function.name)
  
  ::TopsAstProto::StringIndex* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* Function::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Function.name)
  return name_;
}
inline void Function::set_allocated_name(::TopsAstProto::StringIndex* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete name_;
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Function.name)
}

// .TopsAstProto.StringIndex return_type = 2;
inline bool Function::has_return_type() const {
  return this != internal_default_instance() && return_type_ != NULL;
}
inline void Function::clear_return_type() {
  if (GetArenaNoVirtual() == NULL && return_type_ != NULL) {
    delete return_type_;
  }
  return_type_ = NULL;
}
inline const ::TopsAstProto::StringIndex& Function::_internal_return_type() const {
  return *return_type_;
}
inline const ::TopsAstProto::StringIndex& Function::return_type() const {
  const ::TopsAstProto::StringIndex* p = return_type_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Function.return_type)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* Function::release_return_type() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Function.return_type)
  
  ::TopsAstProto::StringIndex* temp = return_type_;
  return_type_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* Function::mutable_return_type() {
  
  if (return_type_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    return_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Function.return_type)
  return return_type_;
}
inline void Function::set_allocated_return_type(::TopsAstProto::StringIndex* return_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete return_type_;
  }
  if (return_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      return_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, return_type, submessage_arena);
    }
    
  } else {
    
  }
  return_type_ = return_type;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Function.return_type)
}

// .TopsAstProto.Location location = 3;
inline bool Function::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void Function::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
inline const ::TopsAstProto::Location& Function::_internal_location() const {
  return *location_;
}
inline const ::TopsAstProto::Location& Function::location() const {
  const ::TopsAstProto::Location* p = location_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Function.location)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::Location*>(
      &::TopsAstProto::_Location_default_instance_);
}
inline ::TopsAstProto::Location* Function::release_location() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Function.location)
  
  ::TopsAstProto::Location* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::TopsAstProto::Location* Function::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::Location>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Function.location)
  return location_;
}
inline void Function::set_allocated_location(::TopsAstProto::Location* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete location_;
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Function.location)
}

// repeated .TopsAstProto.Variable parameters = 4;
inline int Function::parameters_size() const {
  return parameters_.size();
}
inline void Function::clear_parameters() {
  parameters_.Clear();
}
inline ::TopsAstProto::Variable* Function::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Function.parameters)
  return parameters_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >*
Function::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.Function.parameters)
  return &parameters_;
}
inline const ::TopsAstProto::Variable& Function::parameters(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.Function.parameters)
  return parameters_.Get(index);
}
inline ::TopsAstProto::Variable* Function::add_parameters() {
  // @@protoc_insertion_point(field_add:TopsAstProto.Function.parameters)
  return parameters_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >&
Function::parameters() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.Function.parameters)
  return parameters_;
}

// repeated .TopsAstProto.Variable local_vars = 5;
inline int Function::local_vars_size() const {
  return local_vars_.size();
}
inline void Function::clear_local_vars() {
  local_vars_.Clear();
}
inline ::TopsAstProto::Variable* Function::mutable_local_vars(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Function.local_vars)
  return local_vars_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >*
Function::mutable_local_vars() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.Function.local_vars)
  return &local_vars_;
}
inline const ::TopsAstProto::Variable& Function::local_vars(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.Function.local_vars)
  return local_vars_.Get(index);
}
inline ::TopsAstProto::Variable* Function::add_local_vars() {
  // @@protoc_insertion_point(field_add:TopsAstProto.Function.local_vars)
  return local_vars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >&
Function::local_vars() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.Function.local_vars)
  return local_vars_;
}

// -------------------------------------------------------------------

// Variable

// .TopsAstProto.StringIndex name = 1;
inline bool Variable::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline void Variable::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
inline const ::TopsAstProto::StringIndex& Variable::_internal_name() const {
  return *name_;
}
inline const ::TopsAstProto::StringIndex& Variable::name() const {
  const ::TopsAstProto::StringIndex* p = name_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Variable.name)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* Variable::release_name() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Variable.name)
  
  ::TopsAstProto::StringIndex* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* Variable::mutable_name() {
  
  if (name_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Variable.name)
  return name_;
}
inline void Variable::set_allocated_name(::TopsAstProto::StringIndex* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete name_;
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Variable.name)
}

// .TopsAstProto.StringIndex type = 2;
inline bool Variable::has_type() const {
  return this != internal_default_instance() && type_ != NULL;
}
inline void Variable::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
inline const ::TopsAstProto::StringIndex& Variable::_internal_type() const {
  return *type_;
}
inline const ::TopsAstProto::StringIndex& Variable::type() const {
  const ::TopsAstProto::StringIndex* p = type_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Variable.type)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* Variable::release_type() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Variable.type)
  
  ::TopsAstProto::StringIndex* temp = type_;
  type_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* Variable::mutable_type() {
  
  if (type_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Variable.type)
  return type_;
}
inline void Variable::set_allocated_type(::TopsAstProto::StringIndex* type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete type_;
  }
  if (type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, type, submessage_arena);
    }
    
  } else {
    
  }
  type_ = type;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Variable.type)
}

// .TopsAstProto.Location location = 3;
inline bool Variable::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void Variable::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
inline const ::TopsAstProto::Location& Variable::_internal_location() const {
  return *location_;
}
inline const ::TopsAstProto::Location& Variable::location() const {
  const ::TopsAstProto::Location* p = location_;
  // @@protoc_insertion_point(field_get:TopsAstProto.Variable.location)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::Location*>(
      &::TopsAstProto::_Location_default_instance_);
}
inline ::TopsAstProto::Location* Variable::release_location() {
  // @@protoc_insertion_point(field_release:TopsAstProto.Variable.location)
  
  ::TopsAstProto::Location* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::TopsAstProto::Location* Variable::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::Location>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.Variable.location)
  return location_;
}
inline void Variable::set_allocated_location(::TopsAstProto::Location* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete location_;
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.Variable.location)
}

// -------------------------------------------------------------------

// DeclRef

// .TopsAstProto.StringIndex referenced_name = 1;
inline bool DeclRef::has_referenced_name() const {
  return this != internal_default_instance() && referenced_name_ != NULL;
}
inline void DeclRef::clear_referenced_name() {
  if (GetArenaNoVirtual() == NULL && referenced_name_ != NULL) {
    delete referenced_name_;
  }
  referenced_name_ = NULL;
}
inline const ::TopsAstProto::StringIndex& DeclRef::_internal_referenced_name() const {
  return *referenced_name_;
}
inline const ::TopsAstProto::StringIndex& DeclRef::referenced_name() const {
  const ::TopsAstProto::StringIndex* p = referenced_name_;
  // @@protoc_insertion_point(field_get:TopsAstProto.DeclRef.referenced_name)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* DeclRef::release_referenced_name() {
  // @@protoc_insertion_point(field_release:TopsAstProto.DeclRef.referenced_name)
  
  ::TopsAstProto::StringIndex* temp = referenced_name_;
  referenced_name_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* DeclRef::mutable_referenced_name() {
  
  if (referenced_name_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    referenced_name_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.DeclRef.referenced_name)
  return referenced_name_;
}
inline void DeclRef::set_allocated_referenced_name(::TopsAstProto::StringIndex* referenced_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete referenced_name_;
  }
  if (referenced_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      referenced_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, referenced_name, submessage_arena);
    }
    
  } else {
    
  }
  referenced_name_ = referenced_name;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.DeclRef.referenced_name)
}

// .TopsAstProto.StringIndex referenced_type = 2;
inline bool DeclRef::has_referenced_type() const {
  return this != internal_default_instance() && referenced_type_ != NULL;
}
inline void DeclRef::clear_referenced_type() {
  if (GetArenaNoVirtual() == NULL && referenced_type_ != NULL) {
    delete referenced_type_;
  }
  referenced_type_ = NULL;
}
inline const ::TopsAstProto::StringIndex& DeclRef::_internal_referenced_type() const {
  return *referenced_type_;
}
inline const ::TopsAstProto::StringIndex& DeclRef::referenced_type() const {
  const ::TopsAstProto::StringIndex* p = referenced_type_;
  // @@protoc_insertion_point(field_get:TopsAstProto.DeclRef.referenced_type)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* DeclRef::release_referenced_type() {
  // @@protoc_insertion_point(field_release:TopsAstProto.DeclRef.referenced_type)
  
  ::TopsAstProto::StringIndex* temp = referenced_type_;
  referenced_type_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* DeclRef::mutable_referenced_type() {
  
  if (referenced_type_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    referenced_type_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.DeclRef.referenced_type)
  return referenced_type_;
}
inline void DeclRef::set_allocated_referenced_type(::TopsAstProto::StringIndex* referenced_type) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete referenced_type_;
  }
  if (referenced_type) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      referenced_type = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, referenced_type, submessage_arena);
    }
    
  } else {
    
  }
  referenced_type_ = referenced_type;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.DeclRef.referenced_type)
}

// .TopsAstProto.Location location = 3;
inline bool DeclRef::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
inline void DeclRef::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}
inline const ::TopsAstProto::Location& DeclRef::_internal_location() const {
  return *location_;
}
inline const ::TopsAstProto::Location& DeclRef::location() const {
  const ::TopsAstProto::Location* p = location_;
  // @@protoc_insertion_point(field_get:TopsAstProto.DeclRef.location)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::Location*>(
      &::TopsAstProto::_Location_default_instance_);
}
inline ::TopsAstProto::Location* DeclRef::release_location() {
  // @@protoc_insertion_point(field_release:TopsAstProto.DeclRef.location)
  
  ::TopsAstProto::Location* temp = location_;
  location_ = NULL;
  return temp;
}
inline ::TopsAstProto::Location* DeclRef::mutable_location() {
  
  if (location_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::Location>(GetArenaNoVirtual());
    location_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.DeclRef.location)
  return location_;
}
inline void DeclRef::set_allocated_location(::TopsAstProto::Location* location) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete location_;
  }
  if (location) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      location = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.DeclRef.location)
}

// -------------------------------------------------------------------

// TranslationUnit

// .TopsAstProto.StringTable string_table = 1;
inline bool TranslationUnit::has_string_table() const {
  return this != internal_default_instance() && string_table_ != NULL;
}
inline void TranslationUnit::clear_string_table() {
  if (GetArenaNoVirtual() == NULL && string_table_ != NULL) {
    delete string_table_;
  }
  string_table_ = NULL;
}
inline const ::TopsAstProto::StringTable& TranslationUnit::_internal_string_table() const {
  return *string_table_;
}
inline const ::TopsAstProto::StringTable& TranslationUnit::string_table() const {
  const ::TopsAstProto::StringTable* p = string_table_;
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.string_table)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringTable*>(
      &::TopsAstProto::_StringTable_default_instance_);
}
inline ::TopsAstProto::StringTable* TranslationUnit::release_string_table() {
  // @@protoc_insertion_point(field_release:TopsAstProto.TranslationUnit.string_table)
  
  ::TopsAstProto::StringTable* temp = string_table_;
  string_table_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringTable* TranslationUnit::mutable_string_table() {
  
  if (string_table_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringTable>(GetArenaNoVirtual());
    string_table_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.string_table)
  return string_table_;
}
inline void TranslationUnit::set_allocated_string_table(::TopsAstProto::StringTable* string_table) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete string_table_;
  }
  if (string_table) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      string_table = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_table, submessage_arena);
    }
    
  } else {
    
  }
  string_table_ = string_table;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.TranslationUnit.string_table)
}

// .TopsAstProto.StringIndex file_path = 2;
inline bool TranslationUnit::has_file_path() const {
  return this != internal_default_instance() && file_path_ != NULL;
}
inline void TranslationUnit::clear_file_path() {
  if (GetArenaNoVirtual() == NULL && file_path_ != NULL) {
    delete file_path_;
  }
  file_path_ = NULL;
}
inline const ::TopsAstProto::StringIndex& TranslationUnit::_internal_file_path() const {
  return *file_path_;
}
inline const ::TopsAstProto::StringIndex& TranslationUnit::file_path() const {
  const ::TopsAstProto::StringIndex* p = file_path_;
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.file_path)
  return p != NULL ? *p : *reinterpret_cast<const ::TopsAstProto::StringIndex*>(
      &::TopsAstProto::_StringIndex_default_instance_);
}
inline ::TopsAstProto::StringIndex* TranslationUnit::release_file_path() {
  // @@protoc_insertion_point(field_release:TopsAstProto.TranslationUnit.file_path)
  
  ::TopsAstProto::StringIndex* temp = file_path_;
  file_path_ = NULL;
  return temp;
}
inline ::TopsAstProto::StringIndex* TranslationUnit::mutable_file_path() {
  
  if (file_path_ == NULL) {
    auto* p = CreateMaybeMessage<::TopsAstProto::StringIndex>(GetArenaNoVirtual());
    file_path_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.file_path)
  return file_path_;
}
inline void TranslationUnit::set_allocated_file_path(::TopsAstProto::StringIndex* file_path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete file_path_;
  }
  if (file_path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      file_path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file_path, submessage_arena);
    }
    
  } else {
    
  }
  file_path_ = file_path;
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.TranslationUnit.file_path)
}

// string compile_args = 3;
inline void TranslationUnit::clear_compile_args() {
  compile_args_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TranslationUnit::compile_args() const {
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.compile_args)
  return compile_args_.GetNoArena();
}
inline void TranslationUnit::set_compile_args(const ::std::string& value) {
  
  compile_args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TopsAstProto.TranslationUnit.compile_args)
}
#if LANG_CXX11
inline void TranslationUnit::set_compile_args(::std::string&& value) {
  
  compile_args_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TopsAstProto.TranslationUnit.compile_args)
}
#endif
inline void TranslationUnit::set_compile_args(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  compile_args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TopsAstProto.TranslationUnit.compile_args)
}
inline void TranslationUnit::set_compile_args(const char* value, size_t size) {
  
  compile_args_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TopsAstProto.TranslationUnit.compile_args)
}
inline ::std::string* TranslationUnit::mutable_compile_args() {
  
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.compile_args)
  return compile_args_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TranslationUnit::release_compile_args() {
  // @@protoc_insertion_point(field_release:TopsAstProto.TranslationUnit.compile_args)
  
  return compile_args_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TranslationUnit::set_allocated_compile_args(::std::string* compile_args) {
  if (compile_args != NULL) {
    
  } else {
    
  }
  compile_args_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), compile_args);
  // @@protoc_insertion_point(field_set_allocated:TopsAstProto.TranslationUnit.compile_args)
}

// repeated .TopsAstProto.FileInfo included_headers = 4;
inline int TranslationUnit::included_headers_size() const {
  return included_headers_.size();
}
inline void TranslationUnit::clear_included_headers() {
  included_headers_.Clear();
}
inline ::TopsAstProto::FileInfo* TranslationUnit::mutable_included_headers(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.included_headers)
  return included_headers_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::FileInfo >*
TranslationUnit::mutable_included_headers() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.TranslationUnit.included_headers)
  return &included_headers_;
}
inline const ::TopsAstProto::FileInfo& TranslationUnit::included_headers(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.included_headers)
  return included_headers_.Get(index);
}
inline ::TopsAstProto::FileInfo* TranslationUnit::add_included_headers() {
  // @@protoc_insertion_point(field_add:TopsAstProto.TranslationUnit.included_headers)
  return included_headers_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::FileInfo >&
TranslationUnit::included_headers() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.TranslationUnit.included_headers)
  return included_headers_;
}

// repeated .TopsAstProto.Function func_decls = 5;
inline int TranslationUnit::func_decls_size() const {
  return func_decls_.size();
}
inline void TranslationUnit::clear_func_decls() {
  func_decls_.Clear();
}
inline ::TopsAstProto::Function* TranslationUnit::mutable_func_decls(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.func_decls)
  return func_decls_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >*
TranslationUnit::mutable_func_decls() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.TranslationUnit.func_decls)
  return &func_decls_;
}
inline const ::TopsAstProto::Function& TranslationUnit::func_decls(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.func_decls)
  return func_decls_.Get(index);
}
inline ::TopsAstProto::Function* TranslationUnit::add_func_decls() {
  // @@protoc_insertion_point(field_add:TopsAstProto.TranslationUnit.func_decls)
  return func_decls_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >&
TranslationUnit::func_decls() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.TranslationUnit.func_decls)
  return func_decls_;
}

// repeated .TopsAstProto.Function func_defs = 6;
inline int TranslationUnit::func_defs_size() const {
  return func_defs_.size();
}
inline void TranslationUnit::clear_func_defs() {
  func_defs_.Clear();
}
inline ::TopsAstProto::Function* TranslationUnit::mutable_func_defs(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.func_defs)
  return func_defs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >*
TranslationUnit::mutable_func_defs() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.TranslationUnit.func_defs)
  return &func_defs_;
}
inline const ::TopsAstProto::Function& TranslationUnit::func_defs(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.func_defs)
  return func_defs_.Get(index);
}
inline ::TopsAstProto::Function* TranslationUnit::add_func_defs() {
  // @@protoc_insertion_point(field_add:TopsAstProto.TranslationUnit.func_defs)
  return func_defs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Function >&
TranslationUnit::func_defs() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.TranslationUnit.func_defs)
  return func_defs_;
}

// repeated .TopsAstProto.Variable global_vars = 7;
inline int TranslationUnit::global_vars_size() const {
  return global_vars_.size();
}
inline void TranslationUnit::clear_global_vars() {
  global_vars_.Clear();
}
inline ::TopsAstProto::Variable* TranslationUnit::mutable_global_vars(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.global_vars)
  return global_vars_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >*
TranslationUnit::mutable_global_vars() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.TranslationUnit.global_vars)
  return &global_vars_;
}
inline const ::TopsAstProto::Variable& TranslationUnit::global_vars(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.global_vars)
  return global_vars_.Get(index);
}
inline ::TopsAstProto::Variable* TranslationUnit::add_global_vars() {
  // @@protoc_insertion_point(field_add:TopsAstProto.TranslationUnit.global_vars)
  return global_vars_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::Variable >&
TranslationUnit::global_vars() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.TranslationUnit.global_vars)
  return global_vars_;
}

// repeated .TopsAstProto.DeclRef decl_refs = 8;
inline int TranslationUnit::decl_refs_size() const {
  return decl_refs_.size();
}
inline void TranslationUnit::clear_decl_refs() {
  decl_refs_.Clear();
}
inline ::TopsAstProto::DeclRef* TranslationUnit::mutable_decl_refs(int index) {
  // @@protoc_insertion_point(field_mutable:TopsAstProto.TranslationUnit.decl_refs)
  return decl_refs_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::TopsAstProto::DeclRef >*
TranslationUnit::mutable_decl_refs() {
  // @@protoc_insertion_point(field_mutable_list:TopsAstProto.TranslationUnit.decl_refs)
  return &decl_refs_;
}
inline const ::TopsAstProto::DeclRef& TranslationUnit::decl_refs(int index) const {
  // @@protoc_insertion_point(field_get:TopsAstProto.TranslationUnit.decl_refs)
  return decl_refs_.Get(index);
}
inline ::TopsAstProto::DeclRef* TranslationUnit::add_decl_refs() {
  // @@protoc_insertion_point(field_add:TopsAstProto.TranslationUnit.decl_refs)
  return decl_refs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::TopsAstProto::DeclRef >&
TranslationUnit::decl_refs() const {
  // @@protoc_insertion_point(field_list:TopsAstProto.TranslationUnit.decl_refs)
  return decl_refs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TopsAstProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_TopsAstProto_2eproto
