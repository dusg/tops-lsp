syntax = "proto3";

package TopsAstProto;

option go_package = "./;data";

message StringTable {
  repeated string entries = 1;  // 字符串表
}

message StringIndex {
  uint32 index = 1;  // 字符串表索引
}

message Location {
  StringIndex file_name = 1;  // 引用字符串表中的文件名
  uint32 line = 2;
  uint32 column = 3;
  uint32 length = 4;
}

message FileInfo {
  StringIndex file_name = 1;  // 引用字符串表中的文件名
}

message Function {
  string name = 1;         // 引用字符串表中的函数名
  string return_type = 2;  // 引用字符串表中的返回类型
  Location location = 3;
  repeated uint32 parameters = 4;
  repeated uint32 local_vars = 5;
  bool is_definition = 6;  // 是否是函数定义
}
message FunctionCall {
  uint32 func_decl_index = 1;  // 引用函数声明的索引
  string name = 2;             // 引用字符串表中的函数名
  Location location = 3;
}

message Variable {
  enum VarType {
    GLOBAL = 0;     // 全局变量
    LOCAL = 1;      // 局部变量
    PARAMETER = 2;  // 参数
  }
  string name = 1;  // 引用字符串表中的变量名
  string type = 2;  // 引用字符串表中的类型
  Location location = 3;
  VarType var_type = 4;  // 变量类型
}

message DeclRef {
  enum RefType {
    FUNCTION = 0;   // 函数引用
    VARIABLE = 1;   // 变量引用
    PARAMETER = 2;  // 参数引用
  }
  string referenced_name = 1;
  RefType ref_type = 2;  // 引用类型
  oneof ref_obj {
    uint32 function = 3;
    uint32 variable = 4;
  }
  Location location = 5;
}
enum DiagnosticSeverity {
  Ignore = 0;
  Error = 1;
  Warning = 2;
  Information = 3;
  Hint = 4;
}
message Position {
  uint32 line = 1;
  uint32 character = 2;
}
message Range {
  Position start = 1;  // 起始位置
  Position end = 2;    // 结束位置
}
message DiagnosticRelatedInformation {
  message Location {
    string uri = 1;  // 文件 URI
    Range range = 2;  // 错误位置范围
  }
  Location location = 1;  // 错误相关位置
  string message = 2;    // 错误相关信息
}
message Diagnostic {
  Range range = 1;
  DiagnosticSeverity severity = 2;  // 错误级别
  string message = 3;  // 错误信息
  string source = 4;
  repeated DiagnosticRelatedInformation relatedInformation = 5;
}

message TranslationUnit {
  repeated string string_table = 1;  // 字符串表
  string file_path = 2;              // 引用字符串表中的文件路径
  string compile_args = 3;
  repeated FileInfo included_headers = 4;
  repeated uint32 global_vars = 7;
  repeated DeclRef decl_refs = 8;
  repeated Variable variable_table = 10;  // 变量表
  repeated Function function_table = 11;  // 函数表
  repeated Diagnostic diagnostics = 12;
}
